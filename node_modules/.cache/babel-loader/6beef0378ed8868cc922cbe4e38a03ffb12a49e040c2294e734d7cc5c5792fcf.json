{"ast":null,"code":"var _jsxFileName = \"/home/administrator/my-portfolio/portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport About from './components/';\nimport Header from './components/Header';\nimport Education from './components/Education';\nimport Experience from './components/Experience';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const ref = useRef(null);\n  const [toggle, setToggle] = useState(null);\n  useEffect(() => {\n    var _ref$current;\n    ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    });\n  }, [toggle]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(About, {\n      scrollRef: toggle == 'About' ? ref : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"z0G/dxZeoyM+UT3sbjWhOiNt9Cw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Header","Education","Experience","Projects","Contact","useEffect","useRef","useState","App","props","ref","toggle","setToggle","current","scrollIntoView","behavior","block"],"sources":["/home/administrator/my-portfolio/portfolio/src/App.js"],"sourcesContent":["import About from './components/';\nimport Header from './components/Header';\nimport Education from './components/Education';\nimport Experience from './components/Experience';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport { useEffect, useRef, useState } from 'react';\n\nconst App = (props) => {\n  const ref = useRef(null);\n  const [toggle, setToggle] = useState(null);\n\n  useEffect(() => {\n    ref?.current?.scrollIntoView({ behavior: 'smooth', block: 'start'})\n  },[toggle])\n\n  return (\n    <>\n      {/* <Header setToggle={setToggle} /> */}\n      <About scrollRef={ toggle == 'About' ? ref : null} />\n      {/* <Education scrollRef={ toggle == 'Education' ? ref : null} />\n      <Experience scrollRef={ toggle == 'Experience' ? ref : null} />\n      <Projects  scrollRef={ toggle == 'Projects' ? ref : null}/>\n      <Contact scrollRef={ toggle == 'Contact' ? ref : null} /> */}\n    </>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEpD,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAA;EACrB,MAAMC,GAAG,GAAGJ,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE1CF,SAAS,CAAC,MAAM;IAAA;IACdK,GAAG,aAAHA,GAAG,uCAAHA,GAAG,CAAEG,OAAO,iDAAZ,aAAcC,cAAc,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC;EACrE,CAAC,EAAC,CAACL,MAAM,CAAC,CAAC;EAEX,oBACE;IAAA,uBAEE,QAAC,KAAK;MAAC,SAAS,EAAGA,MAAM,IAAI,OAAO,GAAGD,GAAG,GAAG;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG,iBAKpD;AAEP,CAAC;AAAA,GAlBKF,GAAG;AAAA,KAAHA,GAAG;AAoBT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}